name: Build and Publish to TestPyPI

on:
  push:
    branches:
      - deployment # Trigger on pushes to main for testing
  pull_request:
    branches:
      - deployment

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install gfortran on macOS
        if: runner.os == 'macOS'
        run: |
          if ! command -v gfortran &> /dev/null; then
            echo "Attempting to install gfortran via Homebrew..."
            brew update || echo "Brew update failed, continuing..."
            brew install gfortran
            echo "$(brew --prefix gcc)/bin" >> $GITHUB_PATH
          else
            echo "gfortran already found."
          fi
        shell: bash 
      - name: Set macOS deployment target
        if: runner.os == 'macOS'
        run: |
          if [[ "$(sw_vers -productVersion)" == 13.* ]]; then
            echo "Setting MACOSX_DEPLOYMENT_TARGET=13.0"
            echo "MACOSX_DEPLOYMENT_TARGET=13.0" >> $GITHUB_ENV
          else
            # Default to 14.0 for macos-14 and potentially newer runners
            echo "Setting MACOSX_DEPLOYMENT_TARGET=14.0"
            echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> $GITHUB_ENV
          fi
        shell: bash
      - name: Install cibuildwheel with uv support
        run: |
          pip install cibuildwheel[uv]
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install uv
        run: pip install uv

      - name: Build sdist
        run: uv build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-sdist
          path: dist/*.tar.gz

  publish_to_testpypi:
    name: Publish Python distribution to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/deployment'

    steps:
      - name: Download all distribution artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: python-package-*
          merge-multiple: true

      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}