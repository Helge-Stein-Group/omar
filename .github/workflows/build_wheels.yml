name: Build

on: [ push, pull_request ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]

    steps:
      - uses: actions/checkout@v4
      - name: Install gfortran on macOS
        if: runner.os == 'macOS'
        run: |
          if ! command -v gfortran &> /dev/null; then
            brew update
            brew install gfortran
            echo "$(brew --prefix gcc)/bin" >> $GITHUB_PATH
          fi
      - name: Set macOS deployment target
        if: runner.os == 'macOS'
        run: |
          if [[ "$(sw_vers -productVersion)" == 13.* ]]; then
            echo "MACOSX_DEPLOYMENT_TARGET=13.0" >> $GITHUB_ENV
          else
            echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> $GITHUB_ENV
          fi
      - name: Set up Miniconda (Windows)
        if: runner.os == 'Windows'
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
          activate-environment: build-env
  
      - name: Install OpenBLAS and gfortran (Windows)
        if: runner.os == 'Windows'
        run: |
          conda install -y -c conda-forge openblas gfortran numpy scipy meson ninja
      - name: Install cibuildwheel with uv support
        run: |
          pip install cibuildwheel[uv]
      - name: Build wheels
        env:
          PYTHON: ${{ env.pythonLocation }}\\python.exe
        uses: pypa/cibuildwheel@v2.22.0
        # env:
        #   CIBW_SOME_OPTION: value
        #    ...
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl